{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://claude-flow-novice.com/schema/configuration.json",
  "title": "Claude Flow Novice Progressive Configuration Schema",
  "description": "Intelligent configuration schema with progressive disclosure support",
  "type": "object",
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "default": "1.0.0",
      "description": "Configuration schema version for migration tracking"
    },
    "mode": {
      "type": "string",
      "enum": ["auto", "novice", "intermediate", "advanced", "enterprise"],
      "default": "auto",
      "description": "Configuration complexity level",
      "meta": {
        "uiLevel": "basic",
        "category": "core",
        "weight": 100
      }
    },
    "metadata": {
      "type": "object",
      "description": "Configuration metadata and tracking",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Configuration creation timestamp"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification timestamp"
        },
        "autoGenerated": {
          "type": "boolean",
          "default": true,
          "description": "Whether this configuration was auto-generated"
        },
        "userModified": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of user-modified configuration paths"
        },
        "migrationHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fromVersion": { "type": "string" },
              "toVersion": { "type": "string" },
              "timestamp": { "type": "string", "format": "date-time" },
              "changes": { "type": "array", "items": { "type": "string" } }
            }
          }
        }
      },
      "meta": {
        "uiLevel": "hidden",
        "category": "system"
      }
    },
    "project": {
      "type": "object",
      "description": "Project-specific configuration",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "web-app", "api", "cli", "library", "mobile",
            "ml", "data", "game", "desktop", "iot", "mixed"
          ],
          "description": "Project type (auto-detected or user-specified)",
          "meta": {
            "uiLevel": "basic",
            "category": "project",
            "weight": 90,
            "autoDetect": true
          }
        },
        "language": {
          "type": "string",
          "description": "Primary programming language",
          "examples": ["javascript", "typescript", "python", "java", "go", "rust"],
          "meta": {
            "uiLevel": "basic",
            "category": "project",
            "weight": 85,
            "autoDetect": true
          }
        },
        "framework": {
          "type": "string",
          "description": "Main framework or technology stack",
          "examples": ["react", "express", "django", "spring", "fastapi"],
          "meta": {
            "uiLevel": "intermediate",
            "category": "project",
            "weight": 80,
            "autoDetect": true
          }
        },
        "size": {
          "type": "string",
          "enum": ["small", "medium", "large", "enterprise"],
          "description": "Project size classification",
          "meta": {
            "uiLevel": "intermediate",
            "category": "project",
            "weight": 70,
            "autoDetect": true
          }
        },
        "team": {
          "type": "object",
          "description": "Team collaboration settings",
          "properties": {
            "size": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 1,
              "description": "Team size"
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["developer", "tester", "designer", "pm", "architect", "ops"]
              },
              "description": "Team roles"
            }
          },
          "meta": {
            "uiLevel": "advanced",
            "category": "collaboration",
            "weight": 60
          }
        }
      },
      "required": ["type"],
      "meta": {
        "uiLevel": "basic",
        "category": "core",
        "weight": 95
      }
    },
    "agent": {
      "type": "object",
      "description": "Agent orchestration configuration",
      "allOf": [
        {
          "if": {
            "properties": {
              "../mode": { "enum": ["auto", "novice"] }
            }
          },
          "then": {
            "properties": {
              "autoSpawn": {
                "type": "boolean",
                "default": true,
                "description": "Automatically spawn appropriate agents",
                "meta": {
                  "uiLevel": "basic",
                  "category": "agents",
                  "weight": 90
                }
              },
              "maxAgents": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "default": 3,
                "description": "Maximum number of agents (novice: 1-5)",
                "meta": {
                  "uiLevel": "basic",
                  "category": "agents",
                  "weight": 85
                }
              },
              "types": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["coder", "tester", "reviewer", "researcher", "planner"]
                },
                "default": ["coder", "tester"],
                "description": "Preferred agent types for novice mode",
                "meta": {
                  "uiLevel": "basic",
                  "category": "agents",
                  "weight": 80
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "../mode": { "enum": ["intermediate", "advanced", "enterprise"] }
            }
          },
          "then": {
            "properties": {
              "topology": {
                "type": "string",
                "enum": ["mesh", "hierarchical", "ring", "star", "hybrid"],
                "default": "mesh",
                "description": "Agent coordination topology",
                "meta": {
                  "uiLevel": "intermediate",
                  "category": "coordination",
                  "weight": 90
                }
              },
              "maxAgents": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50,
                "default": 8,
                "description": "Maximum number of agents",
                "meta": {
                  "uiLevel": "intermediate",
                  "category": "coordination",
                  "weight": 85
                }
              },
              "strategy": {
                "type": "string",
                "enum": ["balanced", "specialized", "adaptive", "performance", "cost-optimized"],
                "default": "balanced",
                "description": "Agent distribution strategy",
                "meta": {
                  "uiLevel": "intermediate",
                  "category": "coordination",
                  "weight": 80
                }
              },
              "customTypes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Custom agent types",
                "meta": {
                  "uiLevel": "advanced",
                  "category": "customization",
                  "weight": 70
                }
              },
              "coordination": {
                "type": "object",
                "properties": {
                  "consensus": {
                    "type": "string",
                    "enum": ["simple", "byzantine", "raft", "gossip"],
                    "default": "simple",
                    "description": "Consensus algorithm for coordination"
                  },
                  "heartbeatInterval": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 60000,
                    "default": 5000,
                    "description": "Heartbeat interval in milliseconds"
                  },
                  "failureDetection": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable failure detection"
                  }
                },
                "meta": {
                  "uiLevel": "advanced",
                  "category": "coordination",
                  "weight": 75
                }
              }
            }
          }
        }
      ],
      "properties": {
        "hooks": {
          "type": "object",
          "description": "Hook system configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable hooks system"
            },
            "preTask": {
              "type": "object",
              "properties": {
                "sessionRestore": { "type": "boolean", "default": true },
                "resourcePreparation": { "type": "boolean", "default": true },
                "contextLoading": { "type": "boolean", "default": true }
              }
            },
            "postEdit": {
              "type": "object",
              "properties": {
                "memoryStore": { "type": "boolean", "default": true },
                "patternTraining": { "type": "boolean", "default": true },
                "formatCode": { "type": "boolean", "default": true }
              }
            },
            "postTask": {
              "type": "object",
              "properties": {
                "resultStorage": { "type": "boolean", "default": true },
                "metricsExport": { "type": "boolean", "default": true },
                "sessionCleanup": { "type": "boolean", "default": true }
              }
            }
          },
          "meta": {
            "uiLevel": "intermediate",
            "category": "automation",
            "weight": 70
          }
        }
      },
      "required": ["autoSpawn"],
      "meta": {
        "uiLevel": "basic",
        "category": "core",
        "weight": 90
      }
    },
    "mcp": {
      "type": "object",
      "description": "MCP (Model Context Protocol) integration configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable MCP integration",
          "meta": {
            "uiLevel": "basic",
            "category": "integrations",
            "weight": 85
          }
        },
        "providers": {
          "type": "object",
          "properties": {
            "claudeFlow": {
              "type": "object",
              "properties": {
                "enabled": { "type": "boolean", "default": true },
                "command": { "type": "string", "default": "npx" },
                "args": { "type": "array", "items": { "type": "string" }, "default": ["claude-flow@alpha"] },
                "timeout": { "type": "integer", "default": 30000 },
                "retryAttempts": { "type": "integer", "default": 3 }
              }
            },
            "ruvSwarm": {
              "type": "object",
              "properties": {
                "enabled": { "type": "boolean", "default": false },
                "command": { "type": "string", "default": "npx" },
                "args": { "type": "array", "items": { "type": "string" }, "default": ["ruv-swarm"] },
                "timeout": { "type": "integer", "default": 30000 }
              }
            },
            "flowNexus": {
              "type": "object",
              "properties": {
                "enabled": { "type": "boolean", "default": false },
                "command": { "type": "string", "default": "npx" },
                "args": { "type": "array", "items": { "type": "string" }, "default": ["flow-nexus@latest"] },
                "requiresAuth": { "type": "boolean", "default": true }
              }
            }
          },
          "meta": {
            "uiLevel": "intermediate",
            "category": "integrations",
            "weight": 80
          }
        }
      },
      "meta": {
        "uiLevel": "intermediate",
        "category": "integrations",
        "weight": 75
      }
    },
    "features": {
      "type": "object",
      "description": "Feature toggles and capabilities",
      "properties": {
        "neural": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable neural pattern learning",
              "meta": {
                "uiLevel": "intermediate",
                "category": "ai",
                "weight": 70
              }
            },
            "training": {
              "type": "object",
              "properties": {
                "automatic": { "type": "boolean", "default": true },
                "patterns": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["coordination", "optimization", "prediction", "adaptation"]
                  },
                  "default": ["coordination", "optimization"]
                }
              },
              "meta": {
                "uiLevel": "advanced",
                "category": "ai",
                "weight": 65
              }
            }
          }
        },
        "memory": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable persistent memory",
              "meta": {
                "uiLevel": "basic",
                "category": "storage",
                "weight": 80
              }
            },
            "storage": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": ["sqlite", "memory", "redis"],
                  "default": "sqlite"
                },
                "maxSize": {
                  "type": "string",
                  "pattern": "^\\d+[KMGT]?B$",
                  "default": "100MB"
                },
                "ttl": {
                  "type": "integer",
                  "minimum": 3600,
                  "default": 86400,
                  "description": "Time to live in seconds"
                }
              },
              "meta": {
                "uiLevel": "advanced",
                "category": "storage",
                "weight": 75
              }
            }
          }
        },
        "monitoring": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable performance monitoring",
              "meta": {
                "uiLevel": "intermediate",
                "category": "monitoring",
                "weight": 70
              }
            },
            "metrics": {
              "type": "object",
              "properties": {
                "performance": { "type": "boolean", "default": true },
                "resources": { "type": "boolean", "default": true },
                "agents": { "type": "boolean", "default": true },
                "errors": { "type": "boolean", "default": true }
              },
              "meta": {
                "uiLevel": "advanced",
                "category": "monitoring",
                "weight": 65
              }
            },
            "alerting": {
              "type": "object",
              "properties": {
                "enabled": { "type": "boolean", "default": false },
                "thresholds": {
                  "type": "object",
                  "properties": {
                    "errorRate": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.05 },
                    "responseTime": { "type": "integer", "minimum": 100, "default": 5000 },
                    "memoryUsage": { "type": "number", "minimum": 0, "maximum": 1, "default": 0.9 }
                  }
                }
              },
              "meta": {
                "uiLevel": "enterprise",
                "category": "monitoring",
                "weight": 60
              }
            }
          }
        },
        "security": {
          "type": "object",
          "properties": {
            "encryption": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Enable data encryption at rest"
                },
                "algorithm": {
                  "type": "string",
                  "enum": ["AES-256-GCM", "ChaCha20-Poly1305"],
                  "default": "AES-256-GCM"
                }
              },
              "meta": {
                "uiLevel": "enterprise",
                "category": "security",
                "weight": 80
              }
            },
            "authentication": {
              "type": "object",
              "properties": {
                "enabled": { "type": "boolean", "default": false },
                "method": {
                  "type": "string",
                  "enum": ["token", "oauth", "saml", "ldap"],
                  "default": "token"
                }
              },
              "meta": {
                "uiLevel": "enterprise",
                "category": "security",
                "weight": 85
              }
            }
          }
        }
      },
      "meta": {
        "uiLevel": "intermediate",
        "category": "features",
        "weight": 70
      }
    },
    "ui": {
      "type": "object",
      "description": "User interface preferences",
      "properties": {
        "theme": {
          "type": "string",
          "enum": ["auto", "light", "dark"],
          "default": "auto",
          "description": "UI theme preference",
          "meta": {
            "uiLevel": "basic",
            "category": "preferences",
            "weight": 60
          }
        },
        "verbosity": {
          "type": "string",
          "enum": ["minimal", "normal", "verbose", "debug"],
          "default": "normal",
          "description": "Output verbosity level",
          "meta": {
            "uiLevel": "basic",
            "category": "preferences",
            "weight": 65
          }
        },
        "progressiveDisclosure": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable progressive disclosure in UI"
            },
            "showHints": {
              "type": "boolean",
              "default": true,
              "description": "Show contextual hints and tips"
            },
            "animationsEnabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable UI animations"
            }
          },
          "meta": {
            "uiLevel": "advanced",
            "category": "preferences",
            "weight": 55
          }
        }
      },
      "meta": {
        "uiLevel": "basic",
        "category": "preferences",
        "weight": 50
      }
    },
    "storage": {
      "type": "object",
      "description": "Configuration storage settings",
      "properties": {
        "local": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "default": "~/.claude-flow/config.json",
              "description": "Local configuration file path"
            },
            "backup": {
              "type": "boolean",
              "default": true,
              "description": "Enable automatic backups"
            },
            "maxBackups": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "description": "Maximum number of backup files"
            }
          },
          "meta": {
            "uiLevel": "advanced",
            "category": "storage",
            "weight": 70
          }
        },
        "project": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable project-specific configuration"
            },
            "path": {
              "type": "string",
              "default": ".claude-flow/config.json",
              "description": "Project configuration file path"
            },
            "versionControl": {
              "type": "boolean",
              "default": true,
              "description": "Include project config in version control"
            }
          },
          "meta": {
            "uiLevel": "intermediate",
            "category": "storage",
            "weight": 75
          }
        },
        "team": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable team configuration sharing"
            },
            "provider": {
              "type": "string",
              "enum": ["github", "gitlab", "bitbucket", "custom"],
              "default": "github"
            },
            "repository": {
              "type": "string",
              "description": "Team configuration repository"
            },
            "branch": {
              "type": "string",
              "default": "main",
              "description": "Configuration branch"
            }
          },
          "meta": {
            "uiLevel": "enterprise",
            "category": "collaboration",
            "weight": 65
          }
        },
        "cloud": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable cloud synchronization"
            },
            "provider": {
              "type": "string",
              "enum": ["flow-nexus", "github", "s3", "custom"]
            },
            "encryption": {
              "type": "string",
              "enum": ["client-side", "server-side", "disabled"],
              "default": "client-side"
            },
            "syncInterval": {
              "type": "integer",
              "minimum": 300,
              "default": 3600,
              "description": "Sync interval in seconds"
            }
          },
          "meta": {
            "uiLevel": "enterprise",
            "category": "storage",
            "weight": 60
          }
        }
      },
      "meta": {
        "uiLevel": "advanced",
        "category": "storage",
        "weight": 65
      }
    }
  },
  "required": ["version", "mode", "project", "agent"],
  "additionalProperties": false,
  "meta": {
    "uiLevels": {
      "basic": {
        "description": "Essential settings for novice users",
        "sections": ["project", "agent.autoSpawn", "agent.maxAgents", "ui.theme"]
      },
      "intermediate": {
        "description": "Additional options for experienced users",
        "sections": ["mcp", "features.memory", "features.monitoring", "storage.project"]
      },
      "advanced": {
        "description": "Full configuration access for power users",
        "sections": ["agent.coordination", "features.neural", "storage.local", "ui.progressiveDisclosure"]
      },
      "enterprise": {
        "description": "Organization and compliance features",
        "sections": ["features.security", "storage.team", "storage.cloud", "features.monitoring.alerting"]
      }
    },
    "categories": {
      "core": { "priority": 1, "description": "Core system settings" },
      "project": { "priority": 2, "description": "Project-specific configuration" },
      "agents": { "priority": 3, "description": "Agent behavior and coordination" },
      "integrations": { "priority": 4, "description": "External tool integrations" },
      "features": { "priority": 5, "description": "Feature toggles and capabilities" },
      "storage": { "priority": 6, "description": "Configuration storage settings" },
      "preferences": { "priority": 7, "description": "User interface preferences" },
      "monitoring": { "priority": 8, "description": "Monitoring and alerting" },
      "security": { "priority": 9, "description": "Security and compliance" },
      "collaboration": { "priority": 10, "description": "Team and organization features" }
    }
  }
}