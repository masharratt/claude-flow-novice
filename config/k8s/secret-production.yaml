apiVersion: v1
kind: Secret
metadata:
  name: cfn-coordination-secrets-prod
  namespace: claude-flow-novice
  labels:
    app: claude-flow-novice
    environment: production
    component: coordination
type: Opaque
stringData:
  # Agent Authentication Token
  # Generate with: openssl rand -base64 32
  CFN_AGENT_AUTH_TOKEN: "REPLACE_WITH_PRODUCTION_TOKEN"

  # Database Credentials (PostgreSQL)
  CFN_DB_HOST: "cfn-postgres.database.svc.cluster.local"
  CFN_DB_USER: "cfn_production"
  CFN_DB_PASSWORD: "REPLACE_WITH_DB_PASSWORD"

  # GitHub Integration (optional)
  CFN_GITHUB_TOKEN: "REPLACE_WITH_GITHUB_TOKEN"

  # Distributed Tracing Endpoint
  CFN_TRACING_ENDPOINT: "http://jaeger-collector.monitoring.svc.cluster.local:9411"

  # Neural API Key (experimental features)
  CFN_NEURAL_API_KEY: "REPLACE_WITH_NEURAL_API_KEY"
---
# Production Secret Management Best Practices:
#
# 1. DO NOT commit actual secrets to git
# 2. Use external secret management:
#    - AWS Secrets Manager
#    - Azure Key Vault
#    - HashiCorp Vault
#    - Google Secret Manager
#
# 3. Create secrets using kubectl with --dry-run:
#    kubectl create secret generic cfn-coordination-secrets-prod \
#      --from-literal=CFN_AGENT_AUTH_TOKEN="$(openssl rand -base64 32)" \
#      --from-literal=CFN_DB_PASSWORD="your-secure-password" \
#      --dry-run=client -o yaml | kubectl apply -f -
#
# 4. Use External Secrets Operator for GitOps:
#    apiVersion: external-secrets.io/v1beta1
#    kind: ExternalSecret
#    metadata:
#      name: cfn-coordination-secrets-prod
#    spec:
#      secretStoreRef:
#        name: aws-secrets-manager
#      target:
#        name: cfn-coordination-secrets-prod
#      data:
#        - secretKey: CFN_AGENT_AUTH_TOKEN
#          remoteRef:
#            key: prod/cfn/auth-token
#
# 5. Rotate secrets regularly (every 90 days minimum)
# 6. Use RBAC to restrict secret access
# 7. Enable audit logging for secret access
