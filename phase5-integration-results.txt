
> claude-flow-novice@1.5.22 test
> NODE_OPTIONS='--experimental-vm-modules' jest --config=config/jest/jest.config.js --bail --maxWorkers=1 --forceExit tests/integration/phase5 --verbose

ts-jest[config] (WARN) 
    The "ts-jest" config option "isolatedModules" is deprecated and will be removed in v30.0.0. Please use "isolatedModules: true", see https://www.typescriptlang.org/tsconfig/#isolatedModules
  
(node:48022) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
FAIL tests/integration/phase5/hierarchical-coordination.test.ts (19.693 s)
  Hierarchical Coordination System - Integration
    Queen-Worker Lifecycle
      ✓ should initialize hierarchical structure with queen and workers (5 ms)
      ✓ should delegate task from queen → coordinator → worker (122 ms)
      ✕ should track agent workload throughout lifecycle (48 ms)
    Hierarchical Orchestration (8+ Agents)
      ✓ should scale to 8+ agents in hierarchy (1 ms)
      ✓ should distribute tasks across hierarchy efficiently (248 ms)
      ✓ should maintain performance with large hierarchy (558 ms)
    Task Delegation and Load Balancing
      ✓ should balance load across coordinators (452 ms)
      ✕ should trigger rebalancing when load imbalanced (1 ms)
      ✓ should prioritize critical tasks (165 ms)
    Consensus Validation
      ✓ should validate completed tasks with consensus (122 ms)
      ✓ should emit consensus validation events (124 ms)
      ✓ should require 2/3 approval threshold (153 ms)
    Failure Recovery
      ✓ should detect and recover from agent failures (1176 ms)
      ✓ should reassign tasks after agent recovery (13 ms)
    Performance Benchmarks
      ✓ should achieve >10 tasks/sec throughput with 8+ agents (2117 ms)
      ✓ should handle hierarchical depth of 3+ levels efficiently (1 ms)
      ✓ should complete task lifecycle in <100ms average (789 ms)

  ● Hierarchical Coordination System - Integration › Queen-Worker Lifecycle › should track agent workload throughout lifecycle

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      502 |
      503 |       expect(worker).toBeDefined();
    > 504 |       expect(worker?.load).toBeGreaterThan(0);
          |                            ^
      505 |
      506 |       // Wait for completion
      507 |       await new Promise(resolve => setTimeout(resolve, 100));

      at Object.<anonymous> (tests/integration/phase5/hierarchical-coordination.test.ts:504:28)

  ● Hierarchical Coordination System - Integration › Task Delegation and Load Balancing › should trigger rebalancing when load imbalanced

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      625 |       await system.rebalanceLoad();
      626 |
    > 627 |       expect(eventHandler).toHaveBeenCalled();
          |                            ^
      628 |     });
      629 |
      630 |     it('should prioritize critical tasks', async () => {

      at Object.<anonymous> (tests/integration/phase5/hierarchical-coordination.test.ts:627:28)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 15 passed, 17 total
Snapshots:   0 total
Time:        21.33 s
Ran all test suites matching /tests\/integration\/phase5/i.
