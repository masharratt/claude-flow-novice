#!/bin/bash

# Pre-commit hook for secret detection
# This hook runs before each commit to check for hardcoded secrets

echo "üîç Pre-commit: Scanning for hardcoded secrets..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Secret patterns to detect
declare -a PATTERNS=(
    "password\s*=\s*['\"][^'\"]{8,}['\"]"
    "api[_-]?key\s*=\s*['\"][^'\"]{10,}['\"]"
    "secret[_-]?key\s*=\s*['\"][^'\"]{10,}['\"]"
    "access[_-]?token\s*=\s*['\"][^'\"]{10,}['\"]"
    "private[_-]?key\s*=\s*['\"][^'\"]{20,}['\"]"
    "jwt[_-]?token\s*=\s*['\"][^'\"]{20,}['\"]"
    "database[_-]?url\s*=\s*['\"].*://.*:[^'\"]+@[^'\"]+['\"]"
    "AKIA[0-9A-Z]{16}"  # AWS Access Key
    "sk_live_[0-9a-zA-Z]{24}"  # Stripe Secret Key
    "sk-[a-zA-Z0-9]{48}"  # OpenAI API Key
    "sk-ant-[a-zA-Z0-9\-_]{95}"  # Anthropic API Key
    "ghp_[a-zA-Z0-9]{36}"  # GitHub Token
    "-----BEGIN\s+(RSA\s+)?PRIVATE\s+KEY-----"
)

# Files to exclude
declare -a EXCLUDE_PATTERNS=(
    "\.example$"
    "\.template$"
    "\.sample$"
    "README\.md$"
    "\.github/"
    "node_modules/"
    "\.git/"
    "package-lock\.json$"
    "yarn\.lock$"
)

# Check if GitLeaks is available
if command -v gitleaks &> /dev/null; then
    echo "üîß Running GitLeaks scan..."
    if ! gitleaks detect --source=. --verbose 2>/dev/null; then
        echo -e "${RED}‚ùå GitLeaks detected secrets!${NC}"
        echo -e "${YELLOW}üí° Fix the secrets before committing${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úÖ GitLeaks scan passed${NC}"
    fi
fi

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}‚úÖ No files to check${NC}"
    exit 0
fi

# Check each staged file
SECRETS_FOUND=false

for file in $STAGED_FILES; do
    # Skip if file doesn't exist (deleted files)
    if [ ! -f "$file" ]; then
        continue
    fi

    # Skip excluded file patterns
    SKIP_FILE=false
    for exclude_pattern in "${EXCLUDE_PATTERNS[@]}"; do
        if [[ "$file" =~ $exclude_pattern ]]; then
            SKIP_FILE=true
            break
        fi
    done

    if [ "$SKIP_FILE" = true ]; then
        continue
    fi

    echo "üîé Checking: $file"

    # Check for secret patterns
    for pattern in "${PATTERNS[@]}"; do
        if grep -q -i -E "$pattern" "$file" 2>/dev/null; then
            echo -e "${RED}‚ùå SECURITY VIOLATION in $file${NC}"
            echo -e "${RED}   Pattern detected: ${pattern:0:30}...${NC}"

            # Show the offending line (without revealing the actual secret)
            line_num=$(grep -n -i -E "$pattern" "$file" | head -1 | cut -d: -f1)
            echo -e "${YELLOW}   Line $line_num: [REDACTED - contains potential secret]${NC}"

            SECRETS_FOUND=true
        fi
    done

    # Check for common secret files
    case "$file" in
        *.env|*.env.*|id_rsa|id_dsa|id_ecdsa|id_ed25519|*.pem|*.key|*.p12|*.pfx|credentials.json|service-account.json)
            if [[ ! "$file" =~ \.(example|template|sample)$ ]] && [ -s "$file" ]; then
                echo -e "${RED}‚ùå SECURITY VIOLATION: Secret file detected: $file${NC}"
                SECRETS_FOUND=true
            fi
            ;;
    esac
done

# Final result
if [ "$SECRETS_FOUND" = true ]; then
    echo ""
    echo -e "${RED}üö® COMMIT REJECTED - SECRETS DETECTED!${NC}"
    echo -e "${RED}‚ùå Hardcoded secrets found in staged files${NC}"
    echo ""
    echo -e "${YELLOW}üí° To fix this:${NC}"
    echo -e "${YELLOW}   1. Remove hardcoded secrets from your code${NC}"
    echo -e "${YELLOW}   2. Use environment variables instead${NC}"
    echo -e "${YELLOW}   3. Add secret files to .gitignore${NC}"
    echo -e "${YELLOW}   4. Use .env files for local development${NC}"
    echo ""
    echo -e "${YELLOW}üõ°Ô∏è  Security is everyone's responsibility!${NC}"
    exit 1
else
    echo ""
    echo -e "${GREEN}‚úÖ SECURITY CHECK PASSED${NC}"
    echo -e "${GREEN}üõ°Ô∏è  No hardcoded secrets detected${NC}"
    echo ""
fi

exit 0